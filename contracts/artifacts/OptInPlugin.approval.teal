#pragma version 10

// This TEAL was generated by TEALScript v0.82.2
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its respective branch will be "NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch call_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED

NOT_IMPLEMENTED:
	err

// optInToAsset(account,asset,pay)void
abi_route_optInToAsset:
	// mbrPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// asset: asset
	txna ApplicationArgs 2
	btoi
	txnas Assets

	// sender: account
	txna ApplicationArgs 1
	btoi
	txnas Accounts

	// execute optInToAsset(account,asset,pay)void
	callsub optInToAsset
	int 1
	return

// optInToAsset(sender: Account, asset: Asset, mbrPayment: PayTxn): void
optInToAsset:
	proto 3 0

	// contracts/plugins/optin_plugin.algo.ts:7
	// verifyPayTxn(mbrPayment, {
	//       receiver: sender,
	//       amount: {
	//         greaterThan: globals.assetOptInMinBalance,
	//       },
	//     })
	// verify receiver
	frame_dig -3 // mbrPayment: PayTxn
	gtxns Receiver
	frame_dig -1 // sender: Account
	==
	assert

	// verify amount
	frame_dig -3 // mbrPayment: PayTxn
	gtxns Amount
	global AssetOptInMinBalance
	>
	assert

	// contracts/plugins/optin_plugin.algo.ts:14
	// sendAssetTransfer({
	//       sender: sender,
	//       assetReceiver: sender,
	//       assetAmount: 0,
	//       xferAsset: asset,
	//       rekeyTo: sender,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/plugins/optin_plugin.algo.ts:15
	// sender: sender
	frame_dig -1 // sender: Account
	itxn_field Sender

	// contracts/plugins/optin_plugin.algo.ts:16
	// assetReceiver: sender
	frame_dig -1 // sender: Account
	itxn_field AssetReceiver

	// contracts/plugins/optin_plugin.algo.ts:17
	// assetAmount: 0
	int 0
	itxn_field AssetAmount

	// contracts/plugins/optin_plugin.algo.ts:18
	// xferAsset: asset
	frame_dig -2 // asset: Asset
	itxn_field XferAsset

	// contracts/plugins/optin_plugin.algo.ts:19
	// rekeyTo: sender
	frame_dig -1 // sender: Account
	itxn_field RekeyTo

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "optInToAsset(account,asset,pay)void"
	txna ApplicationArgs 0
	match abi_route_optInToAsset
	err