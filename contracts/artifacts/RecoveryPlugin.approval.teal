#pragma version 10

// This TEAL was generated by TEALScript v0.90.2
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	err

// createApplication(address,address,uint64)void
*abi_route_createApplication:
	// graceRounds: uint64
	txna ApplicationArgs 3
	btoi

	// recoveryAccount: address
	txna ApplicationArgs 2
	dup
	len
	int 32
	==
	assert

	// controlledAccount: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==
	assert

	// execute createApplication(address,address,uint64)void
	callsub createApplication
	int 1
	return

// createApplication(controlledAccount: Address, recoveryAccount: Address, graceRounds: uint64): void
createApplication:
	proto 3 0

	// contracts/plugins/recovery_plugin.algo.ts:24
	// this.controlledAccount.value = controlledAccount
	byte 0x6361 // "ca"
	frame_dig -1 // controlledAccount: Address
	app_global_put

	// contracts/plugins/recovery_plugin.algo.ts:25
	// this.recoveryAccount.value = recoveryAccount
	byte 0x7261 // "ra"
	frame_dig -2 // recoveryAccount: Address
	app_global_put

	// contracts/plugins/recovery_plugin.algo.ts:26
	// this.graceRounds.value = graceRounds
	byte 0x6772 // "gr"
	frame_dig -3 // graceRounds: uint64
	app_global_put

	// contracts/plugins/recovery_plugin.algo.ts:27
	// this.recoveryStartRound.value = UINT64_MAX
	byte 0x7273 // "rs"
	int 18446744073709551615
	app_global_put
	retsub

// initiateRecovery()void
*abi_route_initiateRecovery:
	// execute initiateRecovery()void
	callsub initiateRecovery
	int 1
	return

// initiateRecovery(): void
initiateRecovery:
	proto 0 0

	// contracts/plugins/recovery_plugin.algo.ts:31
	// verifyTxn(this.txn, { sender: this.recoveryAccount.value })
	// verify sender
	txn Sender
	byte 0x7261 // "ra"
	app_global_get
	==
	assert

	// contracts/plugins/recovery_plugin.algo.ts:32
	// this.recoveryStartRound.value = globals.round
	byte 0x7273 // "rs"
	global Round
	app_global_put
	retsub

// abortRecovery()void
*abi_route_abortRecovery:
	// execute abortRecovery()void
	callsub abortRecovery
	int 1
	return

// abortRecovery(): void
abortRecovery:
	proto 0 0

	// contracts/plugins/recovery_plugin.algo.ts:36
	// verifyTxn(this.txn, { sender: this.controlledAccount.value })
	// verify sender
	txn Sender
	byte 0x6361 // "ca"
	app_global_get
	==
	assert

	// contracts/plugins/recovery_plugin.algo.ts:37
	// this.recoveryStartRound.value = UINT64_MAX
	byte 0x7273 // "rs"
	int 18446744073709551615
	app_global_put
	retsub

// recover(uint64,address)void
*abi_route_recover:
	// controlledAccount: address
	txna ApplicationArgs 2
	dup
	len
	int 32
	==
	assert

	// abstractedAccountApp: uint64
	txna ApplicationArgs 1
	btoi

	// execute recover(uint64,address)void
	callsub recover
	int 1
	return

// recover(abstractedAccountApp: AppID, controlledAccount: Address): void
recover:
	proto 2 0

	// contracts/plugins/recovery_plugin.algo.ts:43
	// verifyTxn(this.txn, { sender: this.recoveryAccount.value })
	// verify sender
	txn Sender
	byte 0x7261 // "ra"
	app_global_get
	==
	assert

	// contracts/plugins/recovery_plugin.algo.ts:44
	// assert(this.controlledAccount.value == controlledAccount)
	byte 0x6361 // "ca"
	app_global_get
	frame_dig -2 // controlledAccount: Address
	==
	assert

	// contracts/plugins/recovery_plugin.algo.ts:45
	// assert(this.recoveryStartRound.value != UINT64_MAX)
	byte 0x7273 // "rs"
	app_global_get
	int 18446744073709551615
	!=
	assert

	// contracts/plugins/recovery_plugin.algo.ts:46
	// assert(this.recoveryStartRound.value + this.graceRounds.value <= globals.round)
	byte 0x7273 // "rs"
	app_global_get
	byte 0x6772 // "gr"
	app_global_get
	+
	global Round
	<=
	assert

	// contracts/plugins/recovery_plugin.algo.ts:49
	// sendMethodCall<[Address], void>({
	//             name: 'arc58_changeAdmin',
	//             applicationID: abstractedAccountApp,
	//             applicationArgs: [rawBytes(this.recoveryAccount.value)],
	//         })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "arc58_changeAdmin(address)void"
	itxn_field ApplicationArgs

	// contracts/plugins/recovery_plugin.algo.ts:51
	// applicationID: abstractedAccountApp
	frame_dig -1 // abstractedAccountApp: AppID
	itxn_field ApplicationID

	// contracts/plugins/recovery_plugin.algo.ts:52
	// applicationArgs: [rawBytes(this.recoveryAccount.value)]
	byte 0x7261 // "ra"
	app_global_get
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/plugins/recovery_plugin.algo.ts:56
	// sendPayment({
	//             sender: controlledAccount,
	//             receiver: controlledAccount,
	//             rekeyTo: controlledAccount,
	//             amount: 0,
	//         })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/plugins/recovery_plugin.algo.ts:57
	// sender: controlledAccount
	frame_dig -2 // controlledAccount: Address
	itxn_field Sender

	// contracts/plugins/recovery_plugin.algo.ts:58
	// receiver: controlledAccount
	frame_dig -2 // controlledAccount: Address
	itxn_field Receiver

	// contracts/plugins/recovery_plugin.algo.ts:59
	// rekeyTo: controlledAccount
	frame_dig -2 // controlledAccount: Address
	itxn_field RekeyTo

	// contracts/plugins/recovery_plugin.algo.ts:60
	// amount: 0
	int 0
	itxn_field Amount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

*create_NoOp:
	method "createApplication(address,address,uint64)void"
	txna ApplicationArgs 0
	match *abi_route_createApplication
	err

*call_NoOp:
	method "initiateRecovery()void"
	method "abortRecovery()void"
	method "recover(uint64,address)void"
	txna ApplicationArgs 0
	match *abi_route_initiateRecovery *abi_route_abortRecovery *abi_route_recover
	err